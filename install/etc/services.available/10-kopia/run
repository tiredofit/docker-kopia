#!/command/with-contenv bash

source /assets/functions/00-container
prepare_service
source /assets/defaults/10-kopia
source /assets/functions/10-kopia
PROCESS_NAME="kopia"

case "${MODE,,}" in
    client | repository | server)
        if var_true "${ENABLE_ACTIONS}" ; then
            action_args="--enable-actions"
        else
            action_args="--no-enable-actions"
        fi

        if var_true "${ENABLE_GUI}" ; then
            gui_args="--ui --server-username=${UI_ADMIN_USER} --server-password=${UI_ADMIN_PASS}"
            export KOPIA_UI_TITLE_PREFIX=${UI_SITE_TITLE_PREFIX}
        else
            gui_args="--no-ui"
        fi

        if var_true "${ENABLE_METRICS}" ; then
            print_debug "[metrics] Enabling Metrics"
            case "${METRICS_TYPE}" in
                push )
                    print_debug "[metrics | push] Selected Push Mode"
                    if [ -n "${METRICS_PUSH_HOST}" ] ; then metrics_args="${metrics_arg} --metrics-push-addr=${METRICS_PUSH_HOST}" ; fi
                    if [ -n "${METRICS_PUSH_FORMAT}" ] ; then metrics_args="${metrics_arg} --metrics-push-format=${METRICS_PUSH_HOST}" ; fi
                    if [ -n "${METRICS_PUSH_GROUPING}" ] ; then metrics_args="${metrics_arg} --metrics-push-grouping=${METRICS_PUSH_GROUPING}" ; fi
                    if [ -n "${METRICS_PUSH_INTERVAL}" ] ; then metrics_args="${metrics_arg} --metrics-push-interval=${METRICS_PUSH_INTERVAL}" ; fi
                    if [ -n "${METRICS_PUSH_JOB}" ] ; then metrics_args="${metrics_arg} --metrics-push-job=${METRICS_PUSH_JOB}" ; fi
                    if [ -n "${METRICS_PUSH_PASS}" ] ; then metrics_args="${metrics_arg} --metrics-push-password=${METRICS_PUSH_PASS}" ; fi
                    if [ -n "${METRICS_PUSH_USER}" ] ; then metrics_args="${metrics_arg} --metrics-push-username=${METRICS_PUSH_USER}" ; fi
                ;;
                normal | listen | * )
                    print_debug "[metrics | normal] Selected Normal/Listen Mode on ${METRICS_LISTEN_PORT}"
                    metrics_args="--metrics-listen-addr=0.0.0.0:${METRICS_LISTEN_PORT}"
                ;;
            esac
        fi

        if var_true "${ENABLE_TLS}" ; then
            certificates
            case "${MODE,,}" in
                repository )
                    lowercase_fingerprint=$(${ssl_exec} x509 -in "${TLS_CERT_FILE}" -noout -fingerprint -sha256 | cut -f 2 -d = | sed 's|:||g')
                    print_notice "[repository] Provide this SHA256 Hash to clients: ${lowercase_fingerprint,,}"
                    grpc_args="--grpc"
                ;;
            esac
            tls_args="--tls-cert-file=${TLS_CERT_FILE} --tls-key-file=${TLS_KEY_FILE}"
        else
            tls_args="--insecure"
        fi

        if var_true "${PERSIST_CREDENTIALS}" ; then
            persist_credentials="--persist-credentials"
        else
            persist_credentials="--no-persist-credentials"
        fi

        export KOPIA_CACHE_DIRECTORY="${CACHE_PATH}"
        export KOPIA_CONFIG_PATH="${CONFIG_PATH}"/"${CONFIG_FILE}"
        export KOPIA_LOG_DIR="${LOG_PATH}"
        export KOPIA_PASSWORD=${REPOSITORY_PASS}
        export RCLONE_CONFIG_FILE=${RCLONE_CONFIG_FILE}
        export TZ="${TIMEZONE}"
        liftoff

        print_start "Starting Kopia Server ${KOPIA_VERSION}"
        cd "${LOG_PATH}"

        #exec s6-setuidgid kopia kopia \
        exec kopia \
                server \
                start \
                --address="0.0.0.0:${KOPIA_LISTEN_PORT}" \
                --cache-directory="${CACHE_PATH}" \
                --config-file="${CONFIG_PATH}"/"${CONFIG_FILE}" \
                --disable-csrf-token-checks \
                --no-check-for-updates \
                --no-use-keyring \
                --log-dir="${LOG_PATH}" \
                --log-level="${LOG_LEVEL,,}" \
                --file-log-level="${LOG_LEVEL_FILE,,}" \
                --log-file="${LOG_FILE}" \
                --override-username="${KOPIA_USER}" \
                --timezone="${TIMEZONE}" \
                ${gui_args} ${grpc_args} ${metrics_args} ${persist_credentials} ${tls_args} ${KOPIA_SERVER_ARGS}
    ;;
    manual )
        print_start "Starting Kopia Server ${KOPIA_VERSION} in manual mode with user supplied arguments"
        export KOPIA_CACHE_DIRECTORY="${CACHE_PATH}"
        export KOPIA_CONFIG_PATH="${CONFIG_PATH}"/"${CONFIG_FILE}"
        export KOPIA_LOG_DIR="${LOG_PATH}"
        export KOPIA_PASSWORD=${REPOSITORY_PASS}
        export RCLONE_CONFIG_FILE=${RCLONE_CONFIG_FILE}
        export TZ="${TIMEZONE}"
        exec kopia \
                server \
                start ${KOPIA_SERVER_ARGS}
    ;;
    none | idle )
        print_start "Leaving container Idle and not starting any processes related to Kopia"
        sleep infinity
    ;;
esac

